{"name": "test_darp_company_add", "status": "failed", "statusDetails": {"message": "AssertionError: assert (None == 0 or None == 0)\n +  where None = <built-in method get of dict object at 0x10e002300>('status')\n +    where <built-in method get of dict object at 0x10e002300> = {'code': 401, 'data': 'Full authentication is required to access this resource', 'message': '暂未登录或token已经过期'}.get\n +  and   None = <built-in method get of dict object at 0x10e002300>('statusCode')\n +    where <built-in method get of dict object at 0x10e002300> = {'code': 401, 'data': 'Full authentication is required to access this resource', 'message': '暂未登录或token已经过期'}.get", "trace": "self = <public.base.test_sjs_darp_api.TestDarp object at 0x107e62550>, args = ()\nkwargs = {}, request_url = 'http://10.101.12.15:8091/darp/company/add'\nrequest_body = '{\"businessFile\": \"\", \"businessNumer\": \"\", \"companyName\": \"\", \"companyNameEn\": \"\", \"companyProfile\": \"\", \"companyTag\": \"\", \"contacts\": \"\", \"contactsMobile\": \"\", \"legalId\": \"\", \"legalName\": \"\", \"logoUrl\": \"\"}'\nheader = ordereddict()\nheaders = {'Content-Type': 'application/json; charset=utf-8'}\nresponse = {'code': 401, 'data': 'Full authentication is required to access this resource', 'message': '暂未登录或token已经过期'}\n@py_assert1 = [\"None\\n{None = <built-in method get of dict object at 0x10e002300>\\n{<built-in method get of dict object at 0x10e0023... 'Full authentication is required to access this resource', 'message': '暂未登录或token已经过期'}.get\\n}('statusCode')\\n} == 0\"]\n@py_assert3 = <built-in method get of dict object at 0x10e002300>\n@py_assert5 = 'status', @py_assert7 = None, @py_assert10 = 0\n\n    @pytest.mark.darp_api\n    @pytest.mark.api_smoke\n    def test_darp_company_add(self, *args, **kwargs):\n    \n        request_url = base_url.testjavaHost + url.darp_company_add\n        if args:\n            request_body = json.dumps(args[0])\n        else:\n            request_body = json.dumps(self.data['darp_company_add']['requestdata'])\n        header = self.data['darp_company_add']['header']\n        headers = base_url.header\n        headers.update(header)\n        print(\"request=\", request_url, request_body)\n        response = Request.post(url=request_url, data=request_body, headers=headers, verify=False)\n        print(\"response=\", response)\n        try:\n>           assert response.get('status') == 0 or response.get('statusCode') == 0\nE           AssertionError: assert (None == 0 or None == 0)\nE            +  where None = <built-in method get of dict object at 0x10e002300>('status')\nE            +    where <built-in method get of dict object at 0x10e002300> = {'code': 401, 'data': 'Full authentication is required to access this resource', 'message': '暂未登录或token已经过期'}.get\nE            +  and   None = <built-in method get of dict object at 0x10e002300>('statusCode')\nE            +    where <built-in method get of dict object at 0x10e002300> = {'code': 401, 'data': 'Full authentication is required to access this resource', 'message': '暂未登录或token已经过期'}.get\n\npublic/base/test_sjs_darp_api.py:35: AssertionError"}, "attachments": [{"name": "stdout", "source": "cfab6304-c647-4291-8f5a-3d0fb54ad292-attachment.txt", "type": "text/plain"}], "start": 1629102504668, "stop": 1629102504686, "uuid": "83355f64-39d8-475c-af47-562485fd161a", "historyId": "50b53e6a8c1009e06d7be5fe794a6355", "testCaseId": "59390126b45b43c7172647f02105e0bc", "fullName": "testcase.test_core_scenes.TestDarp#test_darp_company_add", "labels": [{"name": "tag", "value": "api_smoke"}, {"name": "tag", "value": "darp_api"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_core_scenes"}, {"name": "subSuite", "value": "TestDarp"}, {"name": "host", "value": "jim-2.local"}, {"name": "thread", "value": "19051-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_core_scenes"}]}