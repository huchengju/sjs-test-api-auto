{"name": "test_darp_admin_login", "status": "failed", "statusDetails": {"message": "AssertionError: assert (None == 0 or None == 0)\n +  where None = <built-in method get of dict object at 0x107f3fac0>('status')\n +    where <built-in method get of dict object at 0x107f3fac0> = {'code': 400, 'data': None, 'message': '用户名或密码错误', 'requestId': '3D058D7931894593BC24CF72E211E42A'}.get\n +  and   None = <built-in method get of dict object at 0x107f3fac0>('statusCode')\n +    where <built-in method get of dict object at 0x107f3fac0> = {'code': 400, 'data': None, 'message': '用户名或密码错误', 'requestId': '3D058D7931894593BC24CF72E211E42A'}.get", "trace": "self = <public.base.test_sjs_darp_api.TestDarp object at 0x107e55520>, args = ()\nkwargs = {}, request_url = 'http://10.101.12.15:8091/darp/admin/login'\nrequest_body = '{\"password\": \"123456\", \"userName\": \"admin\"}'\nheader = ordereddict()\nheaders = {'Content-Type': 'application/json; charset=utf-8'}\nresponse = {'code': 400, 'data': None, 'message': '用户名或密码错误', 'requestId': '3D058D7931894593BC24CF72E211E42A'}\n@py_assert1 = [\"None\\n{None = <built-in method get of dict object at 0x107f3fac0>\\n{<built-in method get of dict object at 0x107f3fa...0, 'data': None, 'message': '用户名或密码错误', 'requestId': '3D058D7931894593BC24CF72E211E42A'}.get\\n}('statusCode')\\n} == 0\"]\n@py_assert3 = <built-in method get of dict object at 0x107f3fac0>\n@py_assert5 = 'status', @py_assert7 = None, @py_assert10 = 0\n\n    @pytest.mark.darp_api\n    @pytest.mark.api_smoke\n    def test_darp_admin_login(self, *args, **kwargs):\n    \n        request_url = base_url.testjavaHost + url.darp_admin_login\n        if args:\n            request_body = json.dumps(args[0])\n        else:\n            request_body = json.dumps(self.data['darp_admin_login']['requestdata'])\n        header = self.data['darp_admin_login']['header']\n        headers = base_url.header\n        headers.update(header)\n        print(\"request=\", request_url, request_body)\n        response = Request.post(url=request_url, data=request_body, headers=headers, verify=False)\n        print(\"response=\", response)\n        try:\n>           assert response.get('status') == 0 or response.get('statusCode') == 0\nE           AssertionError: assert (None == 0 or None == 0)\nE            +  where None = <built-in method get of dict object at 0x107f3fac0>('status')\nE            +    where <built-in method get of dict object at 0x107f3fac0> = {'code': 400, 'data': None, 'message': '用户名或密码错误', 'requestId': '3D058D7931894593BC24CF72E211E42A'}.get\nE            +  and   None = <built-in method get of dict object at 0x107f3fac0>('statusCode')\nE            +    where <built-in method get of dict object at 0x107f3fac0> = {'code': 400, 'data': None, 'message': '用户名或密码错误', 'requestId': '3D058D7931894593BC24CF72E211E42A'}.get\n\npublic/base/test_sjs_darp_api.py:57: AssertionError"}, "attachments": [{"name": "stdout", "source": "f7f4d7ec-461f-48d2-b42c-3296128914b8-attachment.txt", "type": "text/plain"}], "start": 1629102504624, "stop": 1629102504655, "uuid": "60813f16-2d10-4fdc-898c-4f297543b491", "historyId": "c831eac2bef6002c9b0820bb35ffad42", "testCaseId": "5900b6122b2286f80fe0aaefcf86b416", "fullName": "public.base.test_sjs_darp_api.TestDarp#test_darp_admin_login", "labels": [{"name": "tag", "value": "api_smoke"}, {"name": "tag", "value": "darp_api"}, {"name": "parentSuite", "value": "public.base"}, {"name": "suite", "value": "test_sjs_darp_api"}, {"name": "subSuite", "value": "TestDarp"}, {"name": "host", "value": "jim-2.local"}, {"name": "thread", "value": "19051-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "public.base.test_sjs_darp_api"}]}